{"/about/":{"data":{"":"","credits#Credits":"Our vision is to build the best native app experience on Windows and Xbox platform which adopts the latest technology provided by MSFT.\nTo support the projects via ① sharing the apps to community, ② purchasing Pro version and ③ leaving 5-star ratings in the store.\nTo follow the app development updates, we will soon open a Telegram announcement channel.\nCredits\rApps cannot be built without the following tools and inspirations:\nJson.Net Hugo "},"title":"About"},"/blog/":{"data":{"":"\rRSS Feed "},"title":"Blog"},"/docs/":{"data":{"":"","features#Features":"","next#Next":"👋 Hello! Welcome to the Hextra documentation!\nWhat is Hextra?\rHextra is a modern, fast and batteries-included Hugo theme built with Tailwind CSS. Designed for building beautiful websites for documentation, blogs, and websites, it provides out-of-the-box features and flexibility to meet various requirements.\nFeatures\rBeautiful Design - Inspired by Nextra, Hextra utilizes Tailwind CSS to offer a modern design that makes your site look outstanding. Responsive Layout and Dark Mode - It looks great on all devices, from mobile, tablet to desktop. Dark mode is also supported to accommodate various lighting conditions. Fast and Lightweight - Powered by Hugo, a lightning-fast static-site generator housed in a single binary file, Hextra keeps its footprint minimal. No JavaScript or Node.js are needed to use it. Full-text Search - Built-in offline full-text search powered by FlexSearch, no additional configuration required. Battery-included - Markdown, syntax highlighting, LaTeX math formulae, diagrams and Shortcodes elements to enhance your content. Table of contents, breadcrumbs, pagination, sidebar navigation and more are all automatically generated. Multi-language and SEO Ready - Multi-language sites made easy with Hugo’s multilingual mode. Out-of-the-box support is included for SEO tags, Open Graph, and Twitter Cards. Questions or Feedback?\r❓\rHextra is still in active development. Have a question or feedback? Feel free to open an issue!\rNext\rDive right into the following section to get started:\nGetting StartedLearn how to create website using Hextra","questions-or-feedback#Questions or Feedback?":"","what-is-hextra#What is Hextra?":""},"title":"Documentation"},"/docs/_index.fa/":{"data":{"":"","بعدی#بعدی":"👋 سلام! به مستندات هگزترا خوش آمدید!\nهگزترا چیه؟\rهگزترا یک تم Hugo مدرن و سریع است که با Tailwind CSS ساخته شده است. طراحی شده برای ساخت وب‌سایت‌های زیبا برای مستندات، وبلاگ‌ها و وب‌سایت‌ها، ویژگی‌های خارج از جعبه و انعطاف‌پذیری را برای پاسخگویی نیازهای مختلف فراهم می‌کند.\nویژگی‌ها\rطراحی زیبا - با الهام از Nextra، هگزترا از Tailwind CSS برای ارائه یک طراحی مدرن که سایت شما را برجسته می‌کند، استفاده می‌کند. طراحی واکنش‌گرا و حالت تیره - در تمام دستگاه‌ها، از تلفن همراه، تبلت تا دسکتاپ، عالی به نظر می‌رسد. حالت تیره نیز برای انطباق با شرایط مختلف روشنایی پشتیبانی می‌شود. سریع و سبک - طراحی شده توسط Hugo، یک ایجادکننده سایت استاتیک سریع مثل رعد و برق که در یک فایل باینری قرار گرفته است، هگزترا ردپای خود را به حداقل می‌رساند. برای استفاده از آن به جاوااسکریپت یا Node.js نیازی ندارید. جستجوی متن کامل - جستجوی متن کاملا آفلاین داخلی طراحی شده توسط FlexSearch، بدون نیاز به پیکربندی اضافی. امکانات کامل - برای بهتر کردن محتوای شما مارک‌داون، برجسته‌کردن سینتکس، فرمول‌های ریاضی LaTeX، نمودارها و عناصر Shortcodeها را شامل میشه. فهرست مطالب، بردکرامب، صفحه‌بندی، پیمایش نوار کناری و موارد دیگر همه به صورت خودکار تولید می‌شوند. چند زبانه و سئو آماده - سایت‌های چند زبانه با حالت چند زبانه Hugo راحت ساخته می‌شوند. پشتیبانی خارج از جعبه برای برچسب‌های سئو، Open Graph و کارت‌های توییتر گنجانده شده است. سوال یا بازخورد؟\r❓\rهگزترا هنوز در حال توسعه است. سوال یا بازخوردی دارید؟ با خیال راحت یک موضوع را باز کنید!\rبعدی\rبرای شروع کردن به بخش زیر مراجعه کنید:\nشروع کنیدیادگیری نحوه ایجاد وب‌سایت با استفاده از هگزترا","سوال-یا-بازخورد#سوال یا بازخورد؟":"","هگزترا-چیه#هگزترا چیه؟":"","ویژگیها#ویژگی‌ها":""},"title":"مستندات"},"/docs/advanced/":{"data":{"":"This section covers some advanced topics of the theme.\nMulti-language\rCustomization\rComments System"},"title":"Advanced"},"/docs/advanced/_index.fa/":{"data":{"":"این بخش برخی از موضوعات پیشرفته تم را پوشش می‌دهد.\nچند زبانه\rسفارشی‌سازی\rسیستم نظردهی"},"title":"پیشرفته"},"/docs/advanced/comments.fa/":{"data":{"":"","giscus#giscus":"هگزترا از افزودن سیستم نظردهی به سایت شما پشتیبانی می‌کند. در حال حاضر giscus پشتیبانی می‌شود.\ngiscus\rgiscus یک سیستم نظردهی است که توسط GitHub Discussions طراحی شده است. رایگان و متن باز است.\nبرای فعال کردن giscus، باید موارد زیر را به پرونده پیکربندی سایت اضافه کنید:\nhugo.yamlparams: comments: enable: false type: giscus giscus: repo: \u003crepository\u003e repoId: \u003crepository ID\u003e category: \u003ccategory\u003e categoryId: \u003ccategory ID\u003e\rتنظیمات giscus را می توانید از وب‌سایت giscus.app ساخت. جزئیات بیشتر را نیز می‌توانید در آنجا ببینید.\nدیدگاه‌ها را می‌توانید برای یک صفحه خاص در بالای همان صفحه فعال یا غیرفعال کرد:\ncontent/docs/about.md--- title: درباره ما comments: true ---"},"title":"نظردهی"},"/docs/advanced/comments/":{"data":{"":"","giscus#giscus":"Hextra supports adding comments system to your site. Currently giscus is supported.\ngiscus\rgiscus is a comments system powered by GitHub Discussions. It is free and open source.\nTo enable giscus, you need to add the following to the site configuration file:\nhugo.yamlparams: comments: enable: false type: giscus giscus: repo: \u003crepository\u003e repoId: \u003crepository ID\u003e category: \u003ccategory\u003e categoryId: \u003ccategory ID\u003e\rThe giscus configurations can be constructed from the giscus.app website. More details can also be found there.\nComments can be enabled or disabled for a specific page in the page front matter:\ncontent/docs/about.md--- title: About comments: true ---"},"title":"Comments"},"/docs/advanced/customization.fa/":{"data":{"":"","css-سفارشی#CSS سفارشی":"","اسکریپتهای-سفارشی#اسکریپت‌های سفارشی":"","سفارشیسازی-بیشتر#سفارشی‌سازی بیشتر":"هگزترا برخی از گزینه‌های سفارشی‌سازی پیش‌فرض را در پرونده hugo.yaml برای پیکربندی تم ارائه می‌کند. این صفحه گزینه‌های موجود و نحوه سفارشی‌سازی بیشتر تم را توضیح می‌دهد.\nCSS سفارشی\rبرای افزودن CSS سفارشی، باید یک پرونده assets/css/custom.css در سایت خود ایجاد کنیم. هگزترا به طور خودکار این پرونده را بارگیری خواهد کرد.\nخانواده فونت\rخانواده فونت برای محتوا را می‌توانید با استفاده از این سفارشی کنید:\nassets/css/custom.css.content { font-family: \"Times New Roman\", Times, serif; }\rعنصر کد درون‌خطی\rرنگ متن ترکیب شده با متن دیگر را می‌توانید با موارد زیر سفارشی کرد:\nassets/css/custom.css.content code:not(.code-block code) { color: #c97c2e; }\rرنگ اصلی\rرنگ اصلی تم را می‌توانید با تنظیم متغیرهای --primary-hue و --primary-saturation سفارشی کرد:\nassets/css/custom.css:root { --primary-hue: 100deg; --primary-saturation: 90%; }\rبرجسته‌کردن سینتکس\rفهرست تم‌های برجسته‌کردن سینتکس در دسترس گالری Chroma Styles موجود است. شیوه‌نامه را می‌توانید با استفاده از دستور زیر تولید کرد:\nhugo gen chromastyles --style=github\rبرای نادیده گرفتن طرح زمینه برجسته‌کردن سینتکس پیش‌فرض، می‌توانید استایل‌های تولید شده را به پرونده CSS سفارشی اضافه کنیم.\nاسکریپت‌های سفارشی\rبا افزودن پرونده زیر می‌توانید اسکریپت‌های سفارشی را برای هر صفحه به انتهای اون اضافه کنید:\nlayouts/partials/custom/head-end.html\rطرح‌بندی‌های سفارشی\rبا ایجاد پرونده‌ای با همین نام در دایرکتوری layouts سایت خود، می‌توانید طرح‌های تم را نادیده بگیرید. به عنوان مثال، برای لغو طرح‌بندی single.html برای مستندات، یک پروندهlayouts/docs/single.html در سایت خود ایجاد کنید.\nبرای اطلاعات بیشتر، به Templateهای هیوگو مراجعه کنید.\nسفارشی‌سازی بیشتر\rچیزی را که دنبالش بودید پیدا نکردید؟ با خیال راحت بحثی را باز کنید یا به موضوع کمک کنید!","طرحبندیهای-سفارشی#طرح‌بندی‌های سفارشی":""},"title":"سفارشی‌سازی"},"/docs/advanced/customization/":{"data":{"":"","custom-css#Custom CSS":"","custom-layouts#Custom Layouts":"","custom-scripts#Custom Scripts":"","further-customization#Further Customization":"Hextra offers some default customization options in the hugo.yaml config file to configure the theme. This page describes the available options and how to customize the theme further.\nCustom CSS\rTo add custom CSS, we need to create a file assets/css/custom.css in our site. Hextra will automatically load this file.\nFont Family\rThe font family of the content can be customized using:\nassets/css/custom.css.content { font-family: \"Times New Roman\", Times, serif; }\rInline Code Element\rThe color of text mixed with other text can customized with:\nassets/css/custom.css.content code:not(.code-block code) { color: #c97c2e; }\rPrimary Color\rThe primary color of the theme can be customized by setting the --primary-hue and --primary-saturation variables:\nassets/css/custom.css:root { --primary-hue: 100deg; --primary-saturation: 90%; }\rSyntax Highlighting\rList of available syntax highlighting themes are available at Chroma Styles Gallery. The stylesheet can be generated using the command:\nhugo gen chromastyles --style=github\rTo override the default syntax highlighting theme, we can add the generated styles to the custom CSS file.\nCustom Scripts\rYou may add custom scripts to the end of the head for every page by adding the following file:\nlayouts/partials/custom/head-end.html\rCustom Layouts\rThe layouts of the theme can be overridden by creating a file with the same name in the layouts directory of your site. For example, to override the single.html layout for docs, create a file layouts/docs/single.html in your site.\nFor further information, refer to the Hugo Templates.\nFurther Customization\rDidn’t find what you were looking for? Feel free to open a discussion or make a contribution to the theme!"},"title":"Customization"},"/docs/advanced/multi-language.fa/":{"data":{"":"","بیشتر-بخوانید#بیشتر بخوانید":"هگزترا از ایجاد سایت با چندین زبان با استفاده از حالت چند زبانه Hugo پشتیبانی می‌کند.\nفعال‌سازی چند زبانه\rبرای اینکه سایت ما چند زبانه شود، باید زبان‌های پشتیبانی شده را به Hugo بگوییم. باید به پرونده پیکربندی سایت اضافه کنیم:\nhugo.yamldefaultContentLanguage: en languages: en: languageName: English weight: 1 fa: languageName: فارسی weight: 2 ja: languageName: 日本語 weight: 3\rمدیریت ترجمه‌ها بر اساس نام پرونده\rHugo از مدیریت ترجمه با نام پرونده پشتیبانی می‌کند. به عنوان مثال، اگر یک پرونده content/docs/_index.md به زبان انگلیسی داشته باشیم، می توانیم یک پرونده content/docs/_index.fa.md برای ترجمه فارسی ایجاد کنیم.\ncontent\rdocs\r_index.md\r_index.fa.md\r_index.ja.md\rتوجه: Hugo همچنین از تترجمه توسط دایرکتوری محتوا پشتیبانی می‌کند.\nترجمه آیتم‌های منو\rبرای ترجمه آیتم‌های منو در نوار پیمایش، باید فیلد identifier را تنظیم کنیم:\nhugo.yamlmenu: main: - identifier: documentation name: Documentation pageRef: /docs weight: 1 - identifier: blog name: Blog pageRef: /blog weight: 2\rو آنها را در پرونده i18n مربوطه ترجمه کنید:\ni18n/fa.yamldocumentation: مستندات blog: وبلاگ\rترجمه رشته‌ها\rبرای ترجمه رشته‌ها در مکان‌های دیگر، باید ترجمه را به پرونده i18n مربوطه اضافه کنیم:\ni18n/fa.yamlreadMore: ادامه مطلب\rفهرستی از رشته‌های استفاده شده در تم را می‌توان در پرونده i18n/en.yaml پیدا کرد.\nبیشتر بخوانید\rحالت چند زبانه هیوگو هیوگو چند زبانه قسمت ۱: ترجمه محتوا هیوگو چند زبانه قسمت ۲: بومی‌سازی رشته‌ها ","ترجمه-آیتمهای-منو#ترجمه آیتم‌های منو":"","ترجمه-رشتهها#ترجمه رشته‌ها":"","فعالسازی-چند-زبانه#فعال‌سازی چند زبانه":"","مدیریت-ترجمهها-بر-اساس-نام-پرونده#مدیریت ترجمه‌ها بر اساس نام پرونده":""},"title":"چند زبانه"},"/docs/advanced/multi-language/":{"data":{"":"","enable-multi-language#Enable Multi-language":"","manage-translations-by-filename#Manage Translations by Filename":"","read-more#Read More":"Hextra supports creating site with multiple languages using Hugo’s multilingual mode.\nEnable Multi-language\rTo make our site multi-language, we need to tell Hugo the supported languages. We need to add to the site configuration file:\nhugo.yamldefaultContentLanguage: en languages: en: languageName: English weight: 1 fr: languageName: Français weight: 2 ja: languageName: 日本語 weight: 3\rManage Translations by Filename\rHugo supports managing translations by filename. For example, if we have a file content/docs/_index.md in English, we can create a file content/docs/_index.fr.md for French translation.\ncontent\rdocs\r_index.md\r_index.fr.md\r_index.ja.md\rNote: Hugo also supports Translation by content directory.\nTranslate Menu Items\rTo translate menu items in the navigation bar, we need to set the identifier field:\nhugo.yamlmenu: main: - identifier: documentation name: Documentation pageRef: /docs weight: 1 - identifier: blog name: Blog pageRef: /blog weight: 2\rand translate them in the corresponding i18n file:\ni18n/fr.yamldocumentation: Documentation blog: Blog\rTranslate Strings\rTo translate strings on the other places, we need to add the translation to the corresponding i18n file:\ni18n/fr.yamlreadMore: Lire la suite\rA list of strings used in the theme can be found in the i18n/en.yaml file.\nRead More\rHugo Multilingual Mode Hugo Multilingual Part 1: Content translation Hugo Multilingual Part 2: Strings localization ","translate-menu-items#Translate Menu Items":"","translate-strings#Translate Strings":""},"title":"Multi-language"},"/docs/getting-started.fa/":{"data":{"":"","بعدی#بعدی":"شروع سریع از طریق Template\rimfing/hextra-starter-template\nبا استفاده از template در بالای صفحه‌ای مخزن می‌توانید به سرعت شروع به کار کنید.\nما یک گردش کاری GitHub Actions ارائه کرده‌ایم که می‌تواند به ساخت و به‌کاراندازی خودکار سایت شما در گیت‌هاب Pages، برای میزبانی رایگان کمک کند. برای گزینه‌های بیشتر، به‌کاراندازی سایت را بررسی کنید.\n🌐 نسخه‌ي نمایشی ↖\nشروع به عنوان پروژه جدید\rدو راه اصلی برای اضافه کردن تم هگزترا به پروژه Hugo وجود دارد:\nماژول‌های Hugo (توصیه می‌شود): ساده‌ترین و توصیه شده‌ترین. ماژول‌های Hugo به شما امکان می‌دهند تم را مستقیما از منبع آنلاین آن وارد کنید. تم به صورت خودکار دانلود و توسط Hugo مدیریت می‌شود. ساب‌ماژول گیت: در عوض، هگزترا را به عنوان یک ساب‌ماژول گیت اضافه کنید. تم توسط گیت دانلود شده و در پوشه themes پروژه شما ذخیره می‌شود. هگزترا را به عنوان ماژول Hugo راه‌اندازی کنید\rپیش‌نیازها\rقبل از شروع، باید این نرم‌افزارها را نصب کنید:\nHugo (extended version) Git Go مراحل\rراه‌انداختن یک سایت جدید Hugo\rhugo new site my-site --format=yaml\rپیکربندی تم هگزترا از طریق ‌ماژول\r# مقداردهی اولیه ماژول هیوگو cd my-site hugo mod init github.com/username/my-site # افزودن تم هگزترا hugo mod get github.com/imfing/hextra\rبا افزودن موارد زیر، hugo.yaml را برای استفاده از تم هگزترا پیکربندی کنید:\nmodule: imports: - path: github.com/imfing/hextra\rاولین صفحه‌های محتوای خود را ایجاد کنید\rایجاد صفحه محتوای جدید برای صفحه اصلی و صفحه مستندات:\nhugo new content/_index.md hugo new content/docs/_index.md\rپیش‌نمایش سایت به صورت محلی\rhugo server --buildDrafts --disableFastRender\rپیش‌نمایش سایت جدید شما در http://localhost:1313/ در دسترس است.\nچگونه تم را به‌روز کنیم؟\rبرای به‌روزرسانی همه ماژول‌های Hugo در پروژه خود به آخرین نسخه‌هایشان، دستور زیر را اجرا کنید:\nhugo mod get -u\rبرای به‌روزرسانی هگزترا به آخرین نسخه منتشر شده، دستور زیر را اجرا کنید:\nhugo mod get -u github.com/imfing/hextra\rبرای جزئیات بیشتر به ماژول‌های هیوگو مراجعه کنید.\nهگزترا را به عنوان ساب‌ماژول Git راه‌اندازی کنید\rپیش‌نیازها\rقبل از شروع، باید این نرم‌افزارها را نصب کنید:\nHugo (extended version) Git مراحل\rراه‌انداختن یک سایت جدید Hugo\rhugo new site my-site --format=yaml\rافزودن تم هگزترا به عنوان یک ساب‌ماژول Git\rgit submodule add https://github.com/imfing/hextra.git themes/hextra\rبا افزودن موارد زیر، hugo.yaml را برای استفاده از تم هگزترا پیکربندی کنید:\ntheme: hextra\rاولین صفحه‌های محتوای خود را ایجاد کنید\rایجاد صفحه محتوای جدید برای صفحه اصلی و صفحه مستندات:\nhugo new content/_index.md hugo new content/docs/_index.md\rپیش‌نمایش سایت به صورت محلی\rhugo server --buildDrafts --disableFastRender\rپیش‌نمایش سایت جدید شما در http://localhost:1313/ در دسترس است.\nهنگام استفاده از CI/CD برای به‌کاراندازی وب‌سایت Hugo، از اجرای دستور زیر قبل از اجرای دستور hugo مطمئن شوید و ضروری است.\ngit submodule update --init\rاجرا نشدن این دستور باعث می‌شود که پوشه تم با پرونده‌های تم هگزترا پر نشود و منجر به خرابی ساخت شود.\nچگونه تم را به‌روز کنیم؟\rبرای به‌روزرسانی تمام ساب‌ماژول‌های در مخزن خود به آخرین commitها که موجود هست، دستور زیر را اجرا کنید:\ngit submodule update --remote\rبرای به‌روزرسانی هگزترا به آخرین commit، دستور زیر را اجرا کنید:\ngit submodule update --remote themes/hextra\rبرای جزئیات بیشتر به ساب‌ماژول‌های Git مراجعه کنید.\nبعدی\rبرای شروع اضافه کردن مطالب بیشتر، بخش‌های زیر را کاوش کنید:\nسازماندهی پرونده‌ها\rپیکربندی\rمارک‌داون","شروع-به-عنوان-پروژه-جدید#شروع به عنوان پروژه جدید":"","شروع-سریع-از-طریق-template#شروع سریع از طریق Template":""},"title":"شروع کنید"},"/docs/getting-started/":{"data":{"":"","next#Next":"Quick Start from Template\rimfing/hextra-starter-template\nYou could quickly get started by using the above template repository.\nWe have provided a GitHub Actions workflow which can help automatically build and deploy your site to GitHub Pages, and host it for free. For more options, check out Deploy Site.\n🌐 Demo ↗\nStart as New Project\rThere are two main ways to add the Hextra theme to your Hugo project:\nHugo Modules (Recommended): The simplest and recommended method. Hugo modules let you pull in the theme directly from its online source. Theme is downloaded automatically and managed by Hugo.\nGit Submodule: Alternatively, add Hextra as a Git Submodule. The theme is downloaded by Git and stored in your project’s themes folder.\nSetup Hextra as Hugo module\rPrerequisites\rBefore starting, you need to have the following software installed:\nHugo (extended version) Git Go Steps\rInitialize a new Hugo site\rhugo new site my-site --format=yaml\rConfigure Hextra theme via module\r# initialize hugo module cd my-site hugo mod init github.com/username/my-site # add Hextra theme hugo mod get github.com/imfing/hextra\rConfigure hugo.yaml to use Hextra theme by adding the following:\nmodule: imports: - path: github.com/imfing/hextra\rCreate your first content pages\rCreate new content page for the home page and the documentation page:\nhugo new content/_index.md hugo new content/docs/_index.md\rPreview the site locally\rhugo server --buildDrafts --disableFastRender\rVoila, your new site preview is available at http://localhost:1313/.\nHow to update theme?\rTo update all Hugo modules in your project to their latest versions, run the following command:\nhugo mod get -u\rTo update Hextra to the latest released version, run the following command:\nhugo mod get -u github.com/imfing/hextra\rSee Hugo Modules for more details.\nSetup Hextra as Git submodule\rPrerequisites\rBefore starting, you need to have the following software installed:\nHugo (extended version) Git Steps\rInitialize a new Hugo site\rhugo new site my-site --format=yaml\rAdd Hextra theme as a Git submodule\rgit submodule add https://github.com/imfing/hextra.git themes/hextra\rConfigure hugo.yaml to use Hextra theme by adding the following:\ntheme: hextra\rCreate your first content pages\rCreate new content page for the home page and the documentation page:\nhugo new content/_index.md hugo new content/docs/_index.md\rPreview the site locally\rhugo server --buildDrafts --disableFastRender\rYour new site preview is available at http://localhost:1313/.\nWhen using CI/CD for Hugo website deployment, it’s essential to ensure that the following command is executed before running the hugo command.\ngit submodule update --init\rFailure to run this command results in the theme folder not being populated with Hextra theme files, leading to a build failure.\nHow to update theme?\rTo update all submodules in your repository to their latest commits, run the following command:\ngit submodule update --remote\rTo update Hextra to the latest commit, run the following command:\ngit submodule update --remote themes/hextra\rSee Git submodules for more details.\nNext\rExplore the following sections to start adding more contents:\nOrganize Files\rConfiguration\rMarkdown","quick-start-from-template#Quick Start from Template":"","start-as-new-project#Start as New Project":""},"title":"Getting Started"},"/docs/guide/":{"data":{"":"Explore the following sections to learn how to use Hextra:\nOrganize Files\rConfiguration\rMarkdown\rSyntax Highlighting\rLaTeX\rDiagrams\rShortcodes\rDeploy Site"},"title":"Guide"},"/docs/guide/_index.fa/":{"data":{"":"برای یادگیری نحوه استفاده از هگزترا، بخش‌های زیر را کاوش کنید:\nسازماندهی پرونده‌ها\rپیکربندی\rمارک‌داون\rبرجسته‌کردن سینتکس\rLaTeX\rنمودارها\rکدهای کوتاه\rبه‌کاراندازی سایت"},"title":"راهنما"},"/docs/guide/configuration.fa/":{"data":{"":"","سایر-موارد#سایر موارد":"Hugo پیکربندی خود را از hugo.yaml در ریشه سایت Hugo شما می‌خواند. پرونده پیکربندی جایی است که می‌توانید تمام جنبه‌های سایت خود را پیکربندی کنید. پرونده پیکربندی این سایت exampleSite/hugo.yaml را در گیت‌هاب بررسی کنید تا ایده‌ای جامع از تنظیمات موجود و بهترین شیوه‌ها بدست آورید.\nناوبری\rمنو\rمنوی سمت چپ بالا در قسمت menu.main در پرونده پیکربندی تعریف شده است:\nhugo.yamlmenu: main: - name: مستندات pageRef: /docs weight: 1 - name: وبلاگ pageRef: /blog weight: 2 - name: درباره ما pageRef: /about weight: 3 - name: جستجو weight: 4 params: type: search - name: گیت‌هاب weight: 5 url: \"https://github.com/imfing/hextra\" params: icon: github\rانواع مختلفی از آیتم‌های منو وجود دارد:\nپیوند به صفحه‌ای در سایت با pageRef - name: مستندات pageRef: /docs\rپیوند به یک نشانی اینترنتی با url - name: گیت‌هاب url: \"https://github.com\"\rنوار جستجو با type: search - name: جستجو params: type: search\rآیکون - name: گیت‌هاب params: icon: github\rاین آیتم‌های منو را می‌توانید با تنظیم پارامتر weight مرتب کنید.\nآرم و عنوان\rبرای تغییر آرم پیش‌فرض، hugo.yaml را ویرایش کنید و مسیر را به پرونده آرم خود در دایرکتوری static اضافه کنید. به صورت اختیاری، می‌توانید پیوندی را که کاربران هنگام کلیک کردن روی آرم شما به آن هدایت می‌شوند، تغییر دهید، همچنین عرض و ارتفاع آرم را به پیکسل تنظیم کنید.\nhugo.yamlparams: navbar: displayTitle: true displayLogo: true logo: path: images/logo.svg dark: images/logo-dark.svg link: / width: 40 height: 20\rنوار کناری\rنوار کناری اصلی\rبرای نوار کناری اصلی، به طور خودکار از ساختار دایرکتوری محتوا تولید می‌شود. برای جزئیات بیشتر به صفحه سازماندهی پرونده‌ها مراجعه کنید.\nبرای حذف یک صفحه از نوار کناری سمت راست، پارامترsidebar.exclude را در قسمت بالایی صفحه تنظیم کنید:\ncontent/docs/guide/configuration.md--- title: پیکربندی sidebar: exclude: true ---\rپیوندهای اضافی\rپیوندهای اضافی نوار کناری در زیر بخش menu.sidebar در پرونده پیکربندی تعریف شده است:\nhugo.yamlmenu: sidebar: - name: بیشتر params: type: separator weight: 1 - name: \"درباره ما\" pageRef: \"/about\" weight: 2 - name: \"مستندات هیوگو ↖\" url: \"https://gohugo.io/documentation/\" weight: 3\rنوار کناری سمت چپ\rفهرست مطالب\rفهرست مطالب به طور خودکار از سرتیرهای موجود در پرونده محتوا تولید می‌شود. می‌توان آن را با تنظیم toc: false در قسمت بالایی صفحه غیرفعال کرد.\ncontent/docs/guide/configuration.md--- title: پیکربندی toc: false ---\rپیوند ویرایش صفحه\rبرای پیکربندی پیوند ویرایش صفحه، می‌توانیم پارامتر params.editURL.base را در پرونده پیکربندی تنظیم کنیم:\nhugo.yamlparams: editURL: enable: true base: \"https://github.com/your-username/your-repo/edit/main\"\rپیوندهای ویرایش به طور خودکار برای هر صفحه براساس نشانی اینترنتی ارائه شده به عنوان دایرکتوری ریشه ایجاد می‌شود. اگر می‌خواهید پیوند ویرایش را برای یک صفحه خاص تنظیم کنید، می‌توانید پارامتر editURL را در قسمت بالای صفحه تنظیم کنید:\ncontent/docs/guide/configuration.md--- title: پیکربندی editURL: \"https://example.com/edit/this/page\" ---\rپاورقی\rکپی‌رایت\rبرای تغییر متن کپی‌رایت نمایش داده شده در پاورقی وب‌سایت خود، باید پرونده‌ای به نام i18n/fa.yaml ایجاد کنید. در این پرونده متن کپی‌رایت جدید خود را مطابق شکل زیر مشخص کنید:\ni18n/fa.yamlcopyright: \"© ۲۰۲۴ متن شما در اینجا\"\rبرای مرجع شما، یک مثال i18n/en.yaml را می‌توانید در مخزن گیت‌هاب پیدا کنید. علاوه بر این، می‌توانید از فرمت مارک‌داون در متن کپی‌رایت استفاده کنید.\nسایر موارد\rFavicon\rبرای سفارشی کردن favicon برای سایت خود، پرونده‌های آیکون را درون پوشه static قرار دهید تا faviconهای پیش‌فرض در تم جایگزین شود:\nstatic\randroid-chrome-192x192.png\randroid-chrome-512x512.png\rapple-touch-icon.png\rfavicon-16x16.png\rfavicon-32x32.png\rfavicon-dark.svg\rfavicon.ico\rfavicon.svg\rsite.webmanifest\rهر دو پرونده favicon.ico و favicon.svg را در پروژه خود قرار دهید، تا از نمایش صحیح faviconهای سایت خود مطمئن شوید.\nدر حالی که favicon.ico به طور کلی برای مرورگرهای قدیمی‌تر است، favicon.svg توسط مرورگرهای مدرن پشتیبانی می‌شود. faviconfavicon-dark.svg اختیاری را می‌توانید برای یک تجربه سفارشی در حالت تیره اضافه کرد. با خیال راحت از ابزارهایی مانند favicon.io یا favycon برای تولید این آیکون‌ها استفاده کنید.\nپیکربندی تم\rاز تنظیمات theme برای پیکربندی حالت پیش‌فرض تم و دکمه جابه‌جایی استفاده کنید و به بازدیدکنندگان اجازه دهید بین حالت روشن یا تیره جابجا شوند.\nhugo.yamlparams: theme: # light | dark | system default: system displayToggle: true\rگزینه‌های theme.default:\nlight - همیشه از حالت روشن استفاده شود dark - همیشه از حالت تیره استفاده شود system - همگام‌سازی با تنظیمات سیستم‌عامل (پیش‌فرض) پارامتر theme.displayToggle به شما این امکان را می‌دهد که یک دکمه جابجایی برای تغییر حالت تم‌ها نمایش دهید. وقتی روی true تنظیم شود، بازدیدکنندگان می‌توانند بین حالت روشن یا تیره جابه‌جا شوند و تنظیمات پیش‌فرض را نادیده بگیرند.\nعرض صفحه\rعرض صفحه را می‌توان با پارامتر params.page.width در پرونده پیکربندی سفارشی کرد:\nhugo.yamlparams: page: # full (100%), wide (90rem), normal (1280px) width: wide\rسه گزینه در دسترس وجود دارد: full، wide و normal. به طور پیش‌فرض، عرض صفحه روی normal تنظیم شده است.\nبه طور مشابه، عرض نوار ناوبری و پاورقی را می‌توان با پارامترهای params.navbar.width و params.footer.width سفارشی کرد.\nفهرست جستجو\rجستجوی متن کامل توسط FlexSearch پیاده‌سازی شده و به طور پیش‌فرض فعال است. برای سفارشی کردن فهرست جستجو، پارامتر params.search.flexsearch.index را در پرونده پیکربندی تنظیم کنید:\nhugo.yamlparams: # Search search: enable: true type: flexsearch flexsearch: # index page by: content | summary | heading | title index: content\rگزینه‌های flexsearch.index:\ncontent - محتوای کامل صفحه (پیش‌فرض) summary - خلاصه صفحه، برای جزئیات بیشتر به خلاصه مطالب Hugo مراجعه کنید heading - سرتیترهای سطح ۱ و سطح ۲ title - فقط شامل عنوان صفحه است برای حذف یک صفحه از فهرست جستجو، excludeSearch: true را در قسمت بالای صفحه تنظیم کنید:\ncontent/docs/guide/configuration.md--- title: پیکربندی excludeSearch: true ---\rگوگل آنالیتیکس\rبرای فعال کردن گوگل آنالیتیکس، پرچم services.googleAnalytics.ID را در hugo.yaml تنظیم کنید:\nhugo.yamlservices: googleAnalytics: ID: G-MEASUREMENT_ID","ناوبری#ناوبری":"","نوار-کناری#نوار کناری":"","نوار-کناری-سمت-چپ#نوار کناری سمت چپ":"","پاورقی#پاورقی":""},"title":"پیکربندی"},"/docs/guide/configuration/":{"data":{"":"","footer#Footer":"","navigation#Navigation":"","others#Others":"Hugo reads its configuration from hugo.yaml in the root of your Hugo site. The config file is where you can configure all aspects of your site. Check out the config file for this site exampleSite/hugo.yaml on GitHub to get a comprehensive idea of available settings and best practices.\nNavigation\rMenu\rTop right menu is defined under the menu.main section in the config file:\nhugo.yamlmenu: main: - name: Documentation pageRef: /docs weight: 1 - name: Blog pageRef: /blog weight: 2 - name: About pageRef: /about weight: 3 - name: Search weight: 4 params: type: search - name: GitHub weight: 5 url: \"https://github.com/imfing/hextra\" params: icon: github\rThere are different types of menu items:\nLink to a page in the site with pageRef - name: Documentation pageRef: /docs\rLink to an external URL with url - name: GitHub url: \"https://github.com\"\rSearch bar with type: search - name: Search params: type: search\rIcon - name: GitHub params: icon: github\rThese menu items can be sorted by setting the weight parameter.\nLogo and Title\rTo modify the default logo, edit hugo.yaml and add the path to your logo file under static directory. Optionally, you can change the link that users are redirected to when clicking on your logo, as well as set the width \u0026 height of the logo in pixels.\nhugo.yamlparams: navbar: displayTitle: true displayLogo: true logo: path: images/logo.svg dark: images/logo-dark.svg link: / width: 40 height: 20\rSidebar\rMain Sidebar\rFor the main sidebar, it is automatically generated from the structure of the content directory. See the Organize Files page for more details.\nTo exclude a single page from the left sidebar, set the sidebar.exclude parameter in the front matter of the page:\ncontent/docs/guide/configuration.md--- title: Configuration sidebar: exclude: true ---\rExtra Links\rSidebar extra links are defined under the menu.sidebar section in the config file:\nhugo.yamlmenu: sidebar: - name: More params: type: separator weight: 1 - name: \"About\" pageRef: \"/about\" weight: 2 - name: \"Hugo Docs ↗\" url: \"https://gohugo.io/documentation/\" weight: 3\rRight Sidebar\rTable of Contents\rTable of contents is automatically generated from the headings in the content file. It can be disabled by setting toc: false in the front matter of the page.\ncontent/docs/guide/configuration.md--- title: Configuration toc: false ---\rPage Edit Link\rTo configure the page edit link, we can set the params.editURL.base parameter in the config file:\nhugo.yamlparams: editURL: enable: true base: \"https://github.com/your-username/your-repo/edit/main\"\rThe edit links will be automatically generated for each page based on the provided url as root directory. If you want to set edit link for a specific page, you can set the editURL parameter in the front matter of the page:\ncontent/docs/guide/configuration.md--- title: Configuration editURL: \"https://example.com/edit/this/page\" ---\rFooter\rCopyright\rTo modify the copyright text displayed in your website’s footer, you’ll need to create a file named i18n/en.yaml. In this file, specify your new copyright text as shown below:\ni18n/en.yamlcopyright: \"© 2024 YOUR TEXT HERE\"\rFor your reference, an example i18n/en.yaml file can be found in the GitHub repository. Additionally, you could use Markdown format in the copyright text.\nOthers\rFavicon\rTo customize the favicon for your site, place icon files under the static folder to override the default favicons from the theme:\nstatic\randroid-chrome-192x192.png\randroid-chrome-512x512.png\rapple-touch-icon.png\rfavicon-16x16.png\rfavicon-32x32.png\rfavicon-dark.svg\rfavicon.ico\rfavicon.svg\rsite.webmanifest\rInclude both favicon.ico and favicon.svg files in your project to ensure your site’s favicons display correctly.\nWhile favicon.ico is generally for older browsers, favicon.svg is supported by modern ones. The optional favicon-dark.svg can be included for a tailored experience in dark mode. Feel free to use tools like favicon.io or favycon to generate these icons.\nTheme Configuration\rUse the theme setting to configure the default theme mode and toggle button, allowing visitors to switch between light or dark mode.\nhugo.yamlparams: theme: # light | dark | system default: system displayToggle: true\rOptions for theme.default:\nlight - always use light mode dark - always use dark mode system - sync with the operating system setting (default) The theme.displayToggle parameter allows you to display a toggle button for changing themes. When set to true, visitors can switch between light or dark mode, overriding the default setting.\nPage Width\rThe width of the page can be customized by the params.page.width parameter in the config file:\nhugo.yamlparams: page: # full (100%), wide (90rem), normal (1280px) width: wide\rThere are three available options: full, wide, and normal. By default, the page width is set to normal.\nSimilarly, the width of the navbar and footer can be customized by the params.navbar.width and params.footer.width parameters.\nSearch Index\rFull-text search powered by FlexSearch is enabled by default. To customize the search index, set the params.search.flexsearch.index parameter in the config file:\nhugo.yamlparams: # Search search: enable: true type: flexsearch flexsearch: # index page by: content | summary | heading | title index: content\rOptions for flexsearch.index:\ncontent - full content of the page (default) summary - summary of the page, see Hugo Content Summaries for more details heading - level 1 and level 2 headings title - only include the page title To customize the search tokenize, set the params.search.flexsearch.tokenize parameter in the config file:\nhugo.yamlparams: # ... flexsearch: # full | forward | reverse | strict tokenize: forward\rOptions for flexsearch.tokenize:\nstrict - index whole words forward - incrementally index words in forward direction reverse - incrementally index words in both directions full - index every possible combination To exclude a page from the search index, set the excludeSearch: true in the front matter of the page:\ncontent/docs/guide/configuration.md--- title: Configuration excludeSearch: true ---\rGoogle Analytics\rTo enable Google Analytics, set services.googleAnalytics.ID flag in hugo.yaml:\nhugo.yamlservices: googleAnalytics: ID: G-MEASUREMENT_ID","right-sidebar#Right Sidebar":"","sidebar#Sidebar":""},"title":"Configuration"},"/docs/guide/deploy-site.fa/":{"data":{"":"","netlify#Netlify":"","vercel#Vercel":"Hugo وب‌سایت‌های استاتیک را ایجاد می‌کند و امکان گزینه‌های میزبانی انعطاف‌پذیر را فراهم می‌کند. این صفحه راهنماهایی برای به‌کاراندازی سایت هگزترا شما در پلتفرم‌های مختلف ارائه می‌کند.\nگیت‌هاب Pages\rگیت‌هاب Pages روشی توصیه شده برای به‌کاراندازی و میزبانی وب‌سایت شما به صورت رایگان است.\nاگر سایت را با استفاده از hextra-starter-template راه‌اندازی سریع پیاده‌سازی می‌کنید، گردش کار گیت‌هاب Actions را به صورت خارج از جعبه ارائه کرده‌ایم که به‌کاراندازی خودکار در گیت‌هاب Pages به شما کمک می‌کند.\nپیکربندی گیت‌هاب Actions\rدر زیر یک پیکربندی مثال از hextra-starter-template آورده شده است:\n.github/workflows/pages.yaml# Sample workflow for building and deploying a Hugo site to GitHub Pages name: Deploy Hugo site to Pages on: # Runs on pushes targeting the default branch push: branches: [\"main\"] # Allows you to run this workflow manually from the Actions tab workflow_dispatch: # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages permissions: contents: read pages: write id-token: write # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued. # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete. concurrency: group: \"pages\" cancel-in-progress: false # Default to bash defaults: run: shell: bash jobs: # Build job build: runs-on: ubuntu-latest env: HUGO_VERSION: 0.117.0 steps: - name: Checkout uses: actions/checkout@v4 with: fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Go uses: actions/setup-go@v4 with: go-version: '1.21' - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: '0.117.0' extended: true - name: Build with Hugo env: # For maximum backward compatibility with Hugo modules HUGO_ENVIRONMENT: production HUGO_ENV: production run: | hugo \\ --gc --minify \\ --baseURL \"https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/\" - name: Upload artifact uses: actions/upload-pages-artifact@v2 with: path: ./public # Deployment job deploy: environment: name: github-pages url: ${{ steps.deployment.outputs.page_url }} runs-on: ubuntu-latest needs: build steps: - name: Deploy to GitHub Pages id: deployment uses: actions/deploy-pages@v2\rدر تنظیمات مخزن خود، Pages \u003e Build and deployment \u003e Source را روی GitHub Actions تنظیم کنید: به‌طور پیش‌فرض، گردش کار گیت‌هاب Actions بالا .github/workflows/pages.yaml فرض می‌کند که سایت در حال به‌کاراندازی در https://\u003cUSERNAME\u003e.github.io/\u003cREPO\u003e/ است.\nاگر در حال استفاده از https://\u003cUSERNAME\u003e.github.io/ هستید، سپس --baseURL را تغییر دهید:\n.github/workflows/pages.yaml 54 55 56 57 run: | hugo \\ --gc --minify \\ --baseURL \"https://${{ github.repository_owner }}.github.io/\" اگر می‌خواهید روی دامنه شخصی خود استقرار پیدا کند، لطفا مقدار --baseURL را بر این اساس تغییر دهید.\nکلودفلر Pages\rکد منبع سایت خود را در یک مخزن Git (به عنوان مثال گیت‌هاب) قرار دهید وارد پیشخوان کلودفلر شوید و حساب خود را انتخاب کنید در صفحه اصلی حساب‌کاربری، Workers \u0026 Pages \u003e Create application \u003e Pages \u003e Connect to Git را انتخاب کنید مخزن را انتخاب کنید و در بخش Set up builds and Deployments اطلاعات زیر را وارد کنید: Configuration Value Production branch main Build command hugo --gc --minify Build directory public برای جزئیات بیشتر، بررسی کنید:\nیک سایت هیوگو راه‌اندازی کنید.. پشتیبانی زبان و ابزار.. Netlify\rکد خود را به مخزن Git خود (گیت‌هاب، گیت‌لب و غیره) ارسال کنید. وارد کردن پروژه به Netlify اگر از [hextra-starter-template][hextra-starter-template] استفاده نمی‌کنید، موارد زیر را به صورت دستی پیکربندی کنید: دستور Build را روی hugo --gc --minify پیکربندی کنید دایرکتوری Publish را برای public مشخص کنید HUGO_VERSION متغیر محیط استقرار را اضافه کنید و روی 0.119.0 تنظیم کنید استقرار! برای جزئیات بیشتر Hugo را در Netlify بررسی کنید.\nVercel\rکد خود را به مخزن Git خود (گیت‌هاب، گیت‌لب و غیره) ارسال کنید. به پیشخوان Vercel بروید و پروژه Hugo خود را وارد کنید پروژه را پیکربندی کنید، Hugo را به‌ عنوان چارچوب Preset انتخاب کنید دستور Build و Install را لغو کنید: دستور Build را روی hugo --gc --minify تنظیم کنید دستور Install را روی yum install golang تنظیم کنید ","کلودفلر-pages#کلودفلر Pages":"","گیتهاب-pages#گیت‌هاب Pages":""},"title":"به‌کاراندازی سایت"},"/docs/guide/deploy-site/":{"data":{"":"","cloudflare-pages#Cloudflare Pages":"","github-pages#GitHub Pages":"","netlify#Netlify":"","vercel#Vercel":"Hugo generates static websites, allowing for flexible hosting options. This page provides guides for deploying your Hextra site on various platforms.\nGitHub Pages\rGitHub Pages is the recommended way to deploy and host your website for free.\nIf you bootstrap the site using hextra-starter-template, it has provided GitHub Actions workflow out-of-the-box that helps automatically deploy to GitHub Pages.\nGitHub Actions Configuration\rBelow is an example configuration from hextra-starter-template:\n.github/workflows/pages.yaml# Sample workflow for building and deploying a Hugo site to GitHub Pages name: Deploy Hugo site to Pages on: # Runs on pushes targeting the default branch push: branches: [\"main\"] # Allows you to run this workflow manually from the Actions tab workflow_dispatch: # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages permissions: contents: read pages: write id-token: write # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued. # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete. concurrency: group: \"pages\" cancel-in-progress: false # Default to bash defaults: run: shell: bash jobs: # Build job build: runs-on: ubuntu-latest env: HUGO_VERSION: 0.121.2 steps: - name: Checkout uses: actions/checkout@v4 with: fetch-depth: 0 # fetch all history for .GitInfo and .Lastmod submodules: recursive - name: Setup Go uses: actions/setup-go@v5 with: go-version: '1.21' - name: Setup Pages id: pages uses: actions/configure-pages@v4 - name: Setup Hugo run: | wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \\ \u0026\u0026 sudo dpkg -i ${{ runner.temp }}/hugo.deb - name: Build with Hugo env: # For maximum backward compatibility with Hugo modules HUGO_ENVIRONMENT: production HUGO_ENV: production run: | hugo \\ --gc --minify \\ --baseURL \"${{ steps.pages.outputs.base_url }}/\" - name: Upload artifact uses: actions/upload-pages-artifact@v3 with: path: ./public # Deployment job deploy: environment: name: github-pages url: ${{ steps.deployment.outputs.page_url }} runs-on: ubuntu-latest needs: build steps: - name: Deploy to GitHub Pages id: deployment uses: actions/deploy-pages@v4\rIn your repository settings, set the Pages \u003e Build and deployment \u003e Source to GitHub Actions: By default, the above GitHub Actions workflow .github/workflows/pages.yaml assumes that the site is deploying to https://\u003cUSERNAME\u003e.github.io/\u003cREPO\u003e/.\nIf you are deploying to https://\u003cUSERNAME\u003e.github.io/ then modify the --baseURL:\n.github/workflows/pages.yaml 54 55 56 57 run: | hugo \\ --gc --minify \\ --baseURL \"https://${{ github.repository_owner }}.github.io/\" If you are deploying to your own domain, please change the --baseURL value accordingly.\nCloudflare Pages\rPut your site source code in a Git repository (e.g. GitHub) Log in to the Cloudflare dashboard and select your account In Account Home, select Workers \u0026 Pages \u003e Create application \u003e Pages \u003e Connect to Git Select the repository, and in the Set up builds and deployments section, provide the following information: Configuration Value Production branch main Build command hugo --gc --minify Build directory public For more details, check out:\nDeploy a Hugo site. Language support and tools. Netlify\rPush your code to your Git repository (GitHub, GitLab, etc.) Import the project to Netlify If you are not using [hextra-starter-template][hextra-starter-template], configure the following manually: Configure the Build command to hugo --gc --minify Specify the Publish directory to public Add Environment variable HUGO_VERSION and set to 0.119.0 Deploy! Check Hugo on Netlify for more details.\nVercel\rPush your code to your Git repository (GitHub, GitLab, etc.) Go to Vercel Dashboard and import your Hugo project Configure the project, select Hugo as Framework Preset Override the Build Command and Install command: Set Build Command to hugo --gc --minify Set Install Command to yum install golang "},"title":"Deploy Site"},"/docs/guide/diagrams.fa/":{"data":{"":"","mermaid#Mermaid":"در حال حاضر، هگزترا از Mermaid برای نمودارها پشتیبانی می‌کند.\nMermaid\rMermaid یک ابزار نمودار و نمودار مبتنی بر جاوااسکریپت است که تعاریف متنی الهام گرفته از مارک‌داون را دریافت می‌کند و نمودارها را به صورت پویا در مرورگر ایجاد می‌کند. به عنوان مثال، Mermaid می‌تواند نمودارهای فلوچارت، نمودارهای توالی، نمودارهای دایره‌ای و موارد دیگر را رندر کند.\nاستفاده از Mermaid در هگزترا به سادگی نوشتن یک بلوک کد با مجموعه زبان mermaid است:\n```mermaid graph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD; ```\rبه صورت زیر رندر خواهد شد:\ngraph TD;\rA--\u003eB;\rA--\u003eC;\rB--\u003eD;\rC--\u003eD;نمودار توالی:\nsequenceDiagram\rparticipant Alice\rparticipant Bob\rAlice-\u003e\u003eJohn: Hello John, how are you?\rloop Healthcheck\rJohn-\u003e\u003eJohn: Fight against hypochondria\rend\rNote right of John: Rational thoughts prevail!\rJohn--\u003e\u003eAlice: Great!\rJohn-\u003e\u003eBob: How about you?\rBob--\u003e\u003eJohn: Jolly good!برای اطلاعات بیشتر، لطفا به مستندات Mermaid مراجعه کنید."},"title":"نمودارها"},"/docs/guide/diagrams/":{"data":{"":"","mermaid#Mermaid":"Currently, Hextra supports Mermaid for diagrams.\nMermaid\rMermaid is a JavaScript based diagramming and charting tool that takes Markdown-inspired text definitions and creates diagrams dynamically in the browser. For example, Mermaid can render flow charts, sequence diagrams, pie charts and more.\nUsing Mermaid in Hextra is as simple as writing a code block with language set mermaid:\n```mermaid graph TD; A--\u003eB; A--\u003eC; B--\u003eD; C--\u003eD; ```\rwill be rendered as:\ngraph TD;\rA--\u003eB;\rA--\u003eC;\rB--\u003eD;\rC--\u003eD;Sequence diagram:\nsequenceDiagram\rparticipant Alice\rparticipant Bob\rAlice-\u003e\u003eJohn: Hello John, how are you?\rloop Healthcheck\rJohn-\u003e\u003eJohn: Fight against hypochondria\rend\rNote right of John: Rational thoughts prevail!\rJohn--\u003e\u003eAlice: Great!\rJohn-\u003e\u003eBob: How about you?\rBob--\u003e\u003eJohn: Jolly good!For more information, please refer to Mermaid Documentation."},"title":"Diagrams"},"/docs/guide/latex.fa/":{"data":{"":"","توابع-پشتیبانی-شده#توابع پشتیبانی شده":"","شیمی#شیمی":"$\\KaTeX$ برای رندر کردن عبارت‌های ریاضی LaTeX استفاده می‌شود. می‌توان آن را در هر صفحه با تنظیم math روی true در قسمت بالای صفحه فعال کرد.\nMarkdown--- title: \"صفحه من با LaTeX\" math: true ---\rوقتی فعال باشد، اسکریپت‌ها، شیوه‌نامه‌ها و فونت‌های KaTeX به طور خودکار در سایت شما قرار می‌گیرند. می‌توانید از عبارت‌های ریاضی LaTeX در محتوای مارک‌داون خود استفاده کنید.\nمثال\rهر دو عبارت‌های ریاضی درون‌خطی و پاراگراف جداگانه LaTeX در محتوای مارک‌داون پشتیبانی می‌شوند.\nدرون‌خطی\rpage.mdاین $\\sigma(z) = \\frac{1}{1 + e^{-z}}$ درون‌خطی است.\rاین $\\sigma(z) = \\frac{1}{1 + e^{-z}}$ درون‌خطی است.\nپاراگراف جداگانه\rpage.md$$F(\\omega) = \\int_{-\\infty}^{\\infty} f(t) e^{-j\\omega t} \\, dt$$\rبه صورت زیر رندر خواهد شد:\n$$F(\\omega) = \\int_{-\\infty}^{\\infty} f(t) e^{-j\\omega t} , dt$$\nتوابع پشتیبانی شده\rبرای مشاهده فهرست توابع پشتیبانی شده، به توابع پشتیبانی شده KaTeX مراجعه کنید.\nشیمی\rعبارت‌های شیمی از طریق افزونه mhchem پشتیبانی می‌شوند.\nدرون‌خطی: $\\ce{H2O}$ آب است.\nپاراگراف جداگانه:\npage.md$$\\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-}$$\r$$\\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-}$$","مثال#مثال":""},"title":"LaTeX"},"/docs/guide/latex/":{"data":{"":"","chemistry#Chemistry":"$\\KaTeX$ is used for rendering LaTeX math expressions. It can be enabled per page by setting math to true in the page front matter.\nMarkdown--- title: \"My Page with LaTeX\" math: true ---\rWhen enabled, the scripts, stylesheets and fonts from KaTeX will be included automatically in your site. You can start using LaTeX math expressions in your Markdown content.\nExample\rBoth inline and separate paragraph LaTeX math expressions are supported in the Markdown content.\nInline\rpage.mdThis $\\sigma(z) = \\frac{1}{1 + e^{-z}}$ is inline.\rThis $\\sigma(z) = \\frac{1}{1 + e^{-z}}$ is inline.\nSeparate Paragraph\rpage.md$$F(\\omega) = \\int_{-\\infty}^{\\infty} f(t) e^{-j\\omega t} \\, dt$$\rwill be rendered as:\n$$F(\\omega) = \\int_{-\\infty}^{\\infty} f(t) e^{-j\\omega t} , dt$$\nSupported Functions\rFor a list of supported functions, see KaTeX supported functions.\nChemistry\rChemistry expressions are supported via mhchem extension.\nInline: $\\ce{H2O}$ is water.\nSeparate paragraph:\npage.md$$\\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-}$$\r$$\\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-}$$","example#Example":"","supported-functions#Supported Functions":""},"title":"LaTeX"},"/docs/guide/markdown.fa/":{"data":{"":"","مثالهای-مارکداون#مثال‌های مارک‌داون":"","منابع-یادگیری#منابع یادگیری":"Hugo از سینتکس مارک‌داون برای قالب‌بندی متن، ایجاد فهرست و موارد دیگر پشتیبانی می‌کند. این صفحه برخی از رایج‌ترین نمونه‌های سینتکس مارک‌داون را به شما نشان می‌دهد.\nمثال‌های مارک‌داون\rظاهر طراحی دادن به متن\rسبک سینتکس مثال خروجی توپر **متن توپر** **متن توپر** متن توپر کج *متن کج* *متن کج* متن کج خط خورده ~~متن خط خورده~~ ~~متن خط خورده~~ متن خط خورده پایین‌نویس \u003csub\u003e\u003c/sub\u003e این یک متن \u003csub\u003eپایین‌نویس\u003c/sub\u003e است این یک متن پایین‌نویس است بالانویس \u003csup\u003e\u003c/sup\u003e این یک متن \u003csup\u003eبالانویس\u003c/sup\u003e است این یک متن بالانویس است بلوک نقل‌قول\rبلوک نقل‌قول با ذکر منبع\nبا اشتراک‌گذاری حافظه ارتباط برقرار نکنید، حافظه را با برقراری ارتباط به اشتراک بگذارید.\n— راب پایک1\nجدول‌ها\rجدول‌ها بخشی از مشخصات اصلی مارک‌داون نیستند، اما Hugo از آنها در خارج از جعبه پشتیبانی می‌کند.\nنام سن گودرز ۳۰ آصف ۳۴ مارک‌داون درون‌خطی درون جدول‌ها\rکج توپر کد کج توپر کد بلوک‌های کد\rبرجسته‌کردن سینتکس\rفهرست‌ها\rفهرست مرتب‌شده\rاولین آیتم دومین آیتم سومین آیتم فهرست مرتب‌نشده\rفهرست آیتم یک آیتم دیگه و یک آیتم دیگه فهرست تو در تو\rمیوه سیب پرتقال موز لبنیات شیر پنیر عکس‌ها\rبا توضیحات:\nیک چشم‌انداز Unsplash\rپیکربندی\rHugo از Goldmark برای تجزیه مارک‌داون استفاده می‌کند. رندر مارک‌داون را می‌توان در hugo.yaml تحت markup.goldmark پیکربندی کنید. در زیر پیکربندی پیش‌فرض هگزترا را می‌توانید ببینید:\nhugo.yamlmarkup: goldmark: renderer: unsafe: true highlight: noClasses: false\rبرای گزینه‌های پیکربندی بیشتر، به مستندات Hugo در پیکربندی نشانه‌گذاری مراجعه کنید.\nمنابع یادگیری\rراهنمای مارک‌داون برگه تقلب مارک‌داون آموزش مارک‌داون مرجع مارک‌داون نقل‌قول بالا گزیده‌ای از سخنرانی راب پایک در Gopherfest، در تاریخ ۲۷ آبان ۱۳۹۴ است. ↩︎","پیکربندی#پیکربندی":""},"title":"مارک‌داون"},"/docs/guide/markdown/":{"data":{"":"","configuration#Configuration":"","learning-resources#Learning Resources":"Hugo supports Markdown syntax for formatting text, creating lists, and more. This page will show you some of the most common Markdown syntax examples.\nMarkdown Examples\rStyling Text\rStyle Syntax Example Output Bold **bold text** **bold text** bold text Italic *italicized text* *italicized text* italicized text Strikethrough ~~strikethrough text~~ ~~strikethrough text~~ strikethrough text Subscript \u003csub\u003e\u003c/sub\u003e This is a \u003csub\u003esubscript\u003c/sub\u003e text This is a subscript text Superscript \u003csup\u003e\u003c/sup\u003e This is a \u003csup\u003esuperscript\u003c/sup\u003e text This is a superscript text Blockquotes\rBlockquote with attribution\nDon’t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables\rTables aren’t part of the core Markdown spec, but Hugo supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables\rItalics Bold Code italics bold code Code Blocks\rSyntax Highlighting\rLists\rOrdered List\rFirst item Second item Third item Unordered List\rList item Another item And another item Nested list\rFruit Apple Orange Banana Dairy Milk Cheese Images\rWith caption:\nUnsplash Landscape\rConfiguration\rHugo uses Goldmark for Markdown parsing. Markdown rendering can be configured in hugo.yaml under markup.goldmark. Below is the default configuration for Hextra:\nhugo.yamlmarkup: goldmark: renderer: unsafe: true highlight: noClasses: false\rFor more configuration options, see Hugo documentation on Configure Markup.\nLearning Resources\rMarkdown Guide Markdown Cheatsheet Markdown Tutorial Markdown Reference The above quote is excerpted from Rob Pike’s talk during Gopherfest, November 18, 2015. ↩︎","markdown-examples#Markdown Examples":""},"title":"Markdown"},"/docs/guide/organize-files.fa/":{"data":{"":"","افزودن-تصاویر#افزودن تصاویر":"ساختار دایرکتوری\rبه طور پیش‌فرض، Hugo پرونده‌های مارک‌داون را در فهرست content جستجو می‌کند و ساختار فهرست، ساختار خروجی نهایی وب‌سایت شما را تعیین می‌کند. همین سایت را به عنوان مثال در نظر بگیرید:\ncontent\r_index.md\rdocs\r_index.md\rgetting-started.md\rguide\r_index.md\rorganize-files.md\rblog\r_index.md\rpost-1.md\rهر یک از پرونده‌های _index.md صفحه اصلی هر بخش هستند که برای هر بخش مجزا است. سایر پرونده‌های مارک‌داون صفحه‌های معمولی دیگه‌ای هستند.\ncontent\r├── _index.md // \u003c- /\r├── docs\r│ ├── _index.md // \u003c- /docs/\r│ ├── getting-started.md // \u003c- /docs/getting-started/\r│ └── guide\r│ ├── _index.md // \u003c- /docs/guide/\r│ └── organize-files.md // \u003c- /docs/guide/organize-files/\r└── blog\r├── _index.md // \u003c- /blog/\r└── post-1.md // \u003c- /blog/post-1/\rطرح‌بندی‌ها\rهگزترا سه طرح‌بندی برای انواع مختلف محتوا ارائه می‌کند:\nطرح‌بندی دایرکتوری ویژگی‌ها docs content/docs/ ایده‌آل برای مستندات ساختار یافته، مانند این بخش. blog content/blog/ برای نوشته‌های وبلاگ، با هر فهرست‌بندی و هم نمایش جزئیات مقاله. default همه دایرکتوری‌های دیگر مشاهده مقاله تک صفحه‌ای بدون نوار کناری. برای سفارشی کردن یک بخش برای منعکس کردن رفتار یک طرح داخلی، نوع طرح‌بندی مورد نظر را در قسمت بالایی قسمت _index.md` مشخص کنید.\ncontent/my-docs/_index.md--- title: مستندات من cascade: type: docs ---\rپیکربندی مثال بالا تضمین می‌کند که پرونده‌های محتوای در داخل content/my-docs/ به‌طور پیش‌فرض به عنوان مستندات (نوع docs) مورد استفاده قرار می‌گیرند.\nناوبری نوار کناری\rناوبری نوار کناری به طور خودکار براساس حروف الفبا ایجاد می‌شود. برای پیکربندی دستی ترتیب نوار کناری، می‌توانید از پارامتر weight در قسمت بالایی پرونده‌های مارک‌داون استفاده کنید.\ncontent/docs/guide/_index.md--- title: راهنما weight: 2 ---\rℹ️\rتوصیه می‌کنیم نوار کناری خیلی عمیق نباشد. اگر محتوای زیادی دارید، آنها را به چند بخش تقسیم کنید.\rپیکربندی دایرکتوری محتوا\rبه طور پیش‌فرض، دایرکتوری ریشه content/ توسط Hugo برای ساخت سایت استفاده می‌شود. اگر نیاز به استفاده از دایرکتوری متفاوتی برای محتوا دارید، برای مثال docs/، این کار را می‌توانید با تنظیم پارامتر contentDir در پیکربندی سایت hugo.yaml انجام دهید.\nافزودن تصاویر\rبرای افزودن تصاویر، ساده‌ترین راه این است که پرونده‌های عکس‌ها را در همان دایرکتوری پرونده مارک‌داون قرار دهید. برای مثال، یک پرونده عکس image.png را در کنار پرونده my-page.md اضافه کنید:\ncontent\rdocs\rmy-page.md\rimage.png\rسپس، می‌توانید از سینتکس مارک‌داون زیر برای افزودن عکس به محتوا استفاده کنید:\ncontent/docs/my-page.md![](image.png)\rهمچنین می‌توانید از ویژگی بسته‌های صفحه Hugo برای سازماندهی پرونده‌های عکس‌ها همراه با پرونده مارک‌داون استفاده کنید. برای رسیدن به این هدف، پرونده my-page.md را به یک دایرکتوری my-page تبدیل کنید و محتوا را در پرونده‌ای به نام index.md قرار دهید و پرونده‌های عکس‌ها را در دایرکتوری my-page قرار دهید:\ncontent\rdocs\rmy-page\rindex.md\rimage.png\rcontent/docs/my-page/index.md![](image.png)\rهمچنین می‌توانید پرونده‌های عکس‌ها را در دایرکتوری static قرار دهید که عکس‌ها را برای همه صفحات در دسترس قرار می‌دهد:\nstatic\rimages\rimage.png\rcontent\rdocs\rmy-page.md\rتوجه داشته باشید که مسیر عکس با یک اسلش / شروع می‌شود و نسبت به دایرکتوری استاتیک است:\ncontent/docs/my-page.md![](/images/image.png)","ساختار-دایرکتوری#ساختار دایرکتوری":"","طرحبندیها#طرح‌بندی‌ها":"","ناوبری-نوار-کناری#ناوبری نوار کناری":"","پیکربندی-دایرکتوری-محتوا#پیکربندی دایرکتوری محتوا":""},"title":"سازماندهی پرونده‌ها"},"/docs/guide/organize-files/":{"data":{"":"","add-images#Add Images":"Directory Structure\rBy default, Hugo searches for Markdown files in the content directory, and the structure of the directory determines the final output structure of your website. Take this site as an example:\ncontent\r_index.md\rdocs\r_index.md\rgetting-started.md\rguide\r_index.md\rorganize-files.md\rblog\r_index.md\rpost-1.md\rEach of the _index.md files is the index page for the corresponding section. The other Markdown files are regular pages.\ncontent\r├── _index.md // \u003c- /\r├── docs\r│ ├── _index.md // \u003c- /docs/\r│ ├── getting-started.md // \u003c- /docs/getting-started/\r│ └── guide\r│ ├── _index.md // \u003c- /docs/guide/\r│ └── organize-files.md // \u003c- /docs/guide/organize-files/\r└── blog\r├── _index.md // \u003c- /blog/\r└── post-1.md // \u003c- /blog/post-1/\rLayouts\rHextra offers three layouts for different content types:\nLayout Directory Features docs content/docs/ Ideal for structured documentation, same as this section. blog content/blog/ For blog postings, with both listing and detailed article views. default All other directories Single-page article view without sidebar. To customize a section to mirror the behavior of a built-in layout, specify the desired type in the front matter of the section’s _index.md.\ncontent/my-docs/_index.md--- title: My Docs cascade: type: docs ---\rThe above example configuration ensures that the content files inside content/my-docs/ will be treated as documentation (docs type) by default.\nSidebar Navigation\rThe sidebar navigation is generated automatically based on the content organization alphabetically. To manually configure the sidebar order, we can use the weight parameter in the front matter of the Markdown files.\ncontent/docs/guide/_index.md--- title: Guide weight: 2 ---\rℹ️\rIt is recommended to keep the sidebar not too deep. If you have a lot of content, consider splitting them into multiple sections.\rBreadcrumb Navigation\rBreadcrumbs are auto-generated based on the directory structure of /content.\nFor example, consider the file structure demonstrated above. Given that structure, the breadcrumbs atop the page at /docs/guide/organize-files/ would appear automatically as follows:\nDocumentation \u003e Guide \u003e Organize Files\rCustomizing Breadcrumb Link Titles\rBy default, each breadcrumb link is generated based on that page’s title parameter. You can customize this by specifying a linkTitle.\nFor example, if instead of Organize Files we wanted the breadcrumb to be Foo Bar:\ncontent/docs/guide/organize-files.md--- linkTitle: Foo Bar title: Organize Files ---\rThis would now generate the following breadcrumbs:\nDocumentation \u003e Guide \u003e Foo Bar\rHiding Breadcrumbs\rYou can hide breadcrumbs completely from a page by specfying breadcrumbs: false in its front matter:\ncontent/docs/guide/organize-files.md--- breadcrumbs: false title: Organize Files ---\rConfigure Content Directory\rBy default, the root content/ directory is used by Hugo to build the site. If you need to use a different directory for content, for example docs/, this can be done by setting the contentDir parameter in the site configuration hugo.yaml.\nAdd Images\rTo add images, the easiest way is to put the image files in the same directory as the Markdown file. For example, add an image file image.png alongside the my-page.md file:\ncontent\rdocs\rmy-page.md\rimage.png\rThen, we can use the following Markdown syntax to add the image to the content:\ncontent/docs/my-page.md![](image.png)\rWe can also utilize the page bundles feature of Hugo to organize the image files together with the Markdown file. To achieve that, turn the my-page.md file into a directory my-page and put the content into a file named index.md, and put the image files inside the my-page directory:\ncontent\rdocs\rmy-page\rindex.md\rimage.png\rcontent/docs/my-page/index.md![](image.png)\rAlternatively, we can also put the image files in the static directory, which will make the images available for all pages:\nstatic\rimages\rimage.png\rcontent\rdocs\rmy-page.md\rNote that the image path begins with a slash / and is relative to the static directory:\ncontent/docs/my-page.md![](/images/image.png)","breadcrumb-navigation#Breadcrumb Navigation":"","configure-content-directory#Configure Content Directory":"","directory-structure#Directory Structure":"","layouts#Layouts":"","sidebar-navigation#Sidebar Navigation":""},"title":"Organize Files"},"/docs/guide/shortcodes/":{"data":{"":"Hugo Shortcodes are simple snippets inside your content files calling built-in or custom templates.\nHextra provides a collection of beautiful shortcodes to enhance your content.\nCallout\rCards\rDetails\rFileTree\rIcon\rSteps\rTabs"},"title":"Shortcodes"},"/docs/guide/shortcodes/_index.fa/":{"data":{"":"کدهای کوتاه Hugo قطعه‌های ساده‌ای در داخل پرونده‌های محتوای شما هستند که قالب‌های داخلی یا سفارشی را فراخوانی می‌کنند.\nهگزترا مجموعه‌ای از کدهای کوتاه زیبا را برای بهبود محتوای شما ارائه می‌کند.\nFileTree\rآیکون\rجزئیات\rزبانه‌ها\rفراخوانی\rکارت‌ها\rمراحل"},"title":"کدهای کوتاه"},"/docs/guide/shortcodes/callout.fa/":{"data":{"":"","استفاده#استفاده":"یک کامپوننت داخلی برای نشان دادن اطلاعات مهم به خواننده.\nمثال\r👾\rفراخوانی یک متن کوتاه است که برای جلب توجه در نظر گرفته شده است.\rℹ️\rفراخوانی یک متن کوتاه است که برای جلب توجه در نظر گرفته شده است.\r⚠️\rفراخوانی یک متن کوتاه است که برای جلب توجه در نظر گرفته شده است.\r🚫\rفراخوانی یک متن کوتاه است که برای جلب توجه در نظر گرفته شده است.\rاستفاده\rپیش‌فرض\r🌐\rHugo را می‌توانید برای ایجاد طیف گسترده‌ای از وب‌سایت‌ها، از جمله وبلاگ‌ها، نمونه‌کارها، سایت‌های مستندسازی و غیره استفاده کرد.\r{{\u003c callout emoji=\"🌐\" \u003e}} Hugo را می‌توانید برای ایجاد طیف گسترده‌ای از وب‌سایت‌ها، از جمله وبلاگ‌ها، نمونه‌کارها، سایت‌های مستندسازی و غیره استفاده کرد. {{\u003c /callout \u003e}}\rاطلاعات\rℹ️\rلطفا برای مشاهده آخرین نسخه‌ها به گیت‌هاب مراجعه کنید.\r{{\u003c callout type=\"info\" \u003e}} لطفا برای مشاهده آخرین نسخه‌ها به گیت‌هاب مراجعه کنید. {{\u003c /callout \u003e}}\rهشدار\r⚠️\rاین API در نسخه بعدی منسوخ خواهد شد.\r{{\u003c callout type=\"warning\" \u003e}} این API در نسخه بعدی منسوخ خواهد شد. {{\u003c /callout \u003e}}\rخطا\r🚫\rمشکلی پیش آمد و اتفاقی رخ خواهد شد.\r{{\u003c callout type=\"error\" \u003e}} مشکلی پیش آمد و اتفاقی رخ خواهد شد. {{\u003c /callout \u003e}}","مثال#مثال":""},"title":"فراخوانی"},"/docs/guide/shortcodes/callout/":{"data":{"":"","example#Example":"","usage#Usage":"A built-in component to show important information to the reader.\nExample\r👾\rA callout is a short piece of text intended to attract attention.\rℹ️\rA callout is a short piece of text intended to attract attention.\r⚠️\rA callout is a short piece of text intended to attract attention.\r🚫\rA callout is a short piece of text intended to attract attention.\rUsage\rDefault\r🌐\rHugo can be used to create a wide variety of websites, including blogs, portfolios, documentation sites, and more.\r{{\u003c callout emoji=\"🌐\" \u003e}} Hugo can be used to create a wide variety of websites, including blogs, portfolios, documentation sites, and more. {{\u003c /callout \u003e}}\rInfo\rℹ️\rPlease visit GitHub to see the latest releases.\r{{\u003c callout type=\"info\" \u003e}} Please visit GitHub to see the latest releases. {{\u003c /callout \u003e}}\rWarning\r⚠️\rThis API will be deprecated in the next version.\r{{\u003c callout type=\"warning\" \u003e}} A **callout** is a short piece of text intended to attract attention. {{\u003c /callout \u003e}}\rError\r🚫\rSomething went wrong and it’s going to explode.\r{{\u003c callout type=\"error\" \u003e}} Something went wrong and it's going to explode. {{\u003c /callout \u003e}}"},"title":"Callout"},"/docs/guide/shortcodes/cards.fa/":{"data":{"":"","استفاده#استفاده":"","مثال#مثال":"","پارامترهای-کارت#پارامترهای کارت":"","کارت-تصویر#کارت تصویر":"مثال\rفراخوانی\rبدون آیکون\rکارت تصویریک چشم‌انداز Unsplash\rتصویر محلیتصویر خام در دایرکتوری استاتیک است.\rتصویر محلیتصویر در دایرکتوری assets می‌باشد و پردازش توسط Hugo شده است.\rاستفاده\r{{\u003c cards \u003e}}\r{{\u003c card link=\"../callout\" title=\"فراخوانی\" icon=\"warning\" \u003e}}\r{{\u003c card link=\"/fa\" title=\"بدون آیکون\" \u003e}}\r{{\u003c /cards \u003e}}\r{{\u003c cards \u003e}}\r{{\u003c card link=\"/\" title=\"کارت تصویر\" image=\"https://source.unsplash.com/featured/800x600?landscape\" subtitle=\"یک چشم‌انداز Unsplash\" \u003e}}\r{{\u003c card link=\"/\" title=\"تصویر محلی\" image=\"/images/card-image-unprocessed.jpg\" subtitle=\"تصویر خام در دایرکتوری استاتیک است.\" \u003e}}\r{{\u003c card link=\"/\" title=\"تصویر محلی\" image=\"images/space.jpg\" subtitle=\"تصویر در دایرکتوری assets می‌باشد و پردازش توسط Hugo شده است.\" method=\"Resize\" options=\"600x q80 webp\" \u003e}}\r{{\u003c /cards \u003e}}\rپارامترهای کارت\rپارامتر توضیحات link نشانی اینترنتی (داخلی یا خارجی). title عنوان برای کارت. subtitle عنوان زیرنویس (از مارک‌داون پشتیبانی می‌کند).. icon نام آیکون. کارت تصویر\rعلاوه بر این، کارت از افزودن تصویر و پردازش از طریق این پارامترها پشتیبانی می‌کند:\nپارامتر توضیحات image نشانی اینترنتی تصویر کارت را مشخص می‌کند. method روش پردازش تصویر Hugo را تنظیم می‌کند. options گزینه‌های پردازش تصویر Hugo را پیکربندی می‌کند. کارت از سه نوع تصویر پشتیبانی می‌کند:\nتصویر از راه دور: نشانی اینترنتی کامل در پارامتر image. تصویر استاتیک: از مسیر نسبی در دایرکتوری static/ Hugo استفاده کنید. تصویر پردازش شده: از مسیر نسبی در دایرکتوری assets/ Hugo استفاده کنید. هگزترا در صورت نیاز به پردازش تصویر در حین ساخت، به طور خودکار تشخیص می‌دهد و پارامتر options یا تنظیمات پیش‌فرض را اعمال می‌کند (تغییر اندازه، 800x، کیفیت 80، فرمت WebP). در حال حاضر این method را پشتیبانی می‌کند: Resize، Fit، Fill و Crop.\nبرای اطلاعات بیشتر در مورد دستورات، روش‌ها و گزینه‌های پردازش تصویر داخلی Hugo به مستندات پردازش تصویر آن‌ها مراجعه کنید."},"title":"کارت‌ها"},"/docs/guide/shortcodes/cards/":{"data":{"":"","card-parameters#Card Parameters":"","example#Example":"","image-card#Image Card":"Example\rCallout\rNo Icon\rImage CardUnsplash Landscape\rLocal ImageRaw image under static directory.\rLocal ImageImage under assets directory, processed by Hugo.\rUsage\r{{\u003c cards \u003e}}\r{{\u003c card link=\"../callout\" title=\"Callout\" icon=\"warning\" \u003e}}\r{{\u003c card link=\"/\" title=\"No Icon\" \u003e}}\r{{\u003c /cards \u003e}}\r{{\u003c cards \u003e}}\r{{\u003c card link=\"/\" title=\"Image Card\" image=\"https://source.unsplash.com/featured/800x600?landscape\" subtitle=\"Unsplash Landscape\" \u003e}}\r{{\u003c card link=\"/\" title=\"Local Image\" image=\"/images/card-image-unprocessed.jpg\" subtitle=\"Raw image under static directory.\" \u003e}}\r{{\u003c card link=\"/\" title=\"Local Image\" image=\"images/space.jpg\" subtitle=\"Image under assets directory, processed by Hugo.\" method=\"Resize\" options=\"600x q80 webp\" \u003e}}\r{{\u003c /cards \u003e}}\rCard Parameters\rParameter Description link URL (internal or external). title Title heading for the card. subtitle Subtitle heading (supports Markdown). icon Name of the icon. Image Card\rAdditionally, the card supports adding image and processing through these parameters:\nParameter Description image Specifies the image URL for the card. method Sets Hugo’s image processing method. options Configures Hugo’s image processing options. Card supports three kinds of images:\nRemote image: the full URL in the image parameter. Static image: use the relative path in Hugo’s static/ directory. Processed image: use the relative path in Hugo’s assets/ directory. Hextra auto-detects if image processing is needed during build and applies the options parameter or default settings (Resize, 800x, Quality 80, WebP Format). It currently supports these method: Resize, Fit, Fill and Crop.\nFor more on Hugo’s built in image processing commands, methods, and options see their Image Processing Documentation.","usage#Usage":""},"title":"Cards"},"/docs/guide/shortcodes/details.fa/":{"data":{"":"","استفاده#استفاده":"یک کامپوننت داخلی برای نمایش محتوای قابل باز و بسته شدن.\nمثال\rجزئیات\rاین محتوای جزئیات است.\nمارک‌داون پشتیبانی می‌شود.\nبرای نمایش روی من کلیک کنید\rاین به طور پیش‌فرض پنهان می‌شود.\rاستفاده\r{{% details title=\"جزئیات\" %}} این محتوای جزئیات است. مارک‌داون **پشتیبانی می‌شود**. {{% /details %}}\r{{% details title=\"برای نمایش روی من کلیک کنید\"closed=\"true\" %}} این به طور پیش‌فرض پنهان می‌شود. {{% /details %}}","مثال#مثال":""},"title":"جزئیات"},"/docs/guide/shortcodes/details/":{"data":{"":"","example#Example":"","usage#Usage":"A built-in component to display a collapsible content.\nExample\rDetails\rThis is the content of the details.\nMarkdown is supported.\nClick me to reveal\rThis will be hidden by default.\rUsage\r{{% details title=\"Details\" %}} This is the content of the details. Markdown is **supported**. {{% /details %}}\r{{% details title=\"Click me to reveal\" closed=\"true\" %}} This will be hidden by default. {{% /details %}}"},"title":"Details"},"/docs/guide/shortcodes/filetree.fa/":{"data":{"":"","استفاده#استفاده":"مثال\rcontent\r_index.md\rdocs\r_index.md\rintroduction.md\rintroduction.fa.md\rhugo.toml\rاستفاده\rMarkdown{{\u003c filetree/container \u003e}} {{\u003c filetree/folder name=\"content\" \u003e}} {{\u003c filetree/file name=\"_index.md\" \u003e}} {{\u003c filetree/folder name=\"docs\" state=\"closed\" \u003e}} {{\u003c filetree/file name=\"_index.md\" \u003e}} {{\u003c filetree/file name=\"introduction.md\" \u003e}} {{\u003c filetree/file name=\"introduction.fa.md\" \u003e}} {{\u003c /filetree/folder \u003e}} {{\u003c /filetree/folder \u003e}} {{\u003c filetree/file name=\"hugo.toml\" \u003e}} {{\u003c /filetree/container \u003e}}","مثال#مثال":""},"title":"FileTree"},"/docs/guide/shortcodes/filetree/":{"data":{"":"","example#Example":"","usage#Usage":"Example\rcontent\r_index.md\rdocs\r_index.md\rintroduction.md\rintroduction.fr.md\rhugo.toml\rUsage\rMarkdown{{\u003c filetree/container \u003e}} {{\u003c filetree/folder name=\"content\" \u003e}} {{\u003c filetree/file name=\"_index.md\" \u003e}} {{\u003c filetree/folder name=\"docs\" state=\"closed\" \u003e}} {{\u003c filetree/file name=\"_index.md\" \u003e}} {{\u003c filetree/file name=\"introduction.md\" \u003e}} {{\u003c filetree/file name=\"introduction.fr.md\" \u003e}} {{\u003c /filetree/folder \u003e}} {{\u003c /filetree/folder \u003e}} {{\u003c filetree/file name=\"hugo.toml\" \u003e}} {{\u003c /filetree/container \u003e}}"},"title":"FileTree"},"/docs/guide/shortcodes/icon.fa/":{"data":{"":"","استفاده#استفاده":"برای استفاده از این کد کوتاه درون‌خطی، باید آن را در پیکربندی فعال کنید:\nhugo.yamlenableInlineShortcodes: true\rفهرست آیکون‌های موجود را می‌توانید در data/icons.yaml پیدا کنید.\nمثال\rاستفاده\r{{\u003c icon \"github\" \u003e}}\rآیکون‌های با طرح‌های متفاوت در Heroicons نسخه ۱ خارج از جعبه در دسترس هستند.\nچجوری آیکون‌های خودمان را اضافه کنیم\rپرونده data/icons.yaml را ایجاد کنید، سپس آیکون‌های SVG خود را در فرمت زیر اضافه کنید:\ndata/icons.yamlyour-icon: \u003csvg\u003eyour icon svg content\u003c/svg\u003e\rسپس می‌توان آن را در کد کوتاه مانند زیر استفاده کرد:\n{{\u003c icon \"your-icon\" \u003e}}\r{{\u003c card icon=\"your-icon\" \u003e}}\rنکته: Iconify Design مکانی عالی برای پیدا کردن آیکون‌های SVG برای سایت شما است.","مثال#مثال":""},"title":"آیکون"},"/docs/guide/shortcodes/icon/":{"data":{"":"","example#Example":"","usage#Usage":"To use this shortcode inline, inline shortcode needs to be enabled in the config:\nhugo.yamlenableInlineShortcodes: true\rList of available icons can be found in data/icons.yaml.\nExample\rUsage\r{{\u003c icon \"github\" \u003e}}\rHeroicons v1 outline icons are available out of the box.\nHow to add your own icons\rCreate data/icons.yaml file, then add your own SVG icons in the following format:\ndata/icons.yamlyour-icon: \u003csvg\u003eyour icon svg content\u003c/svg\u003e\rIt then can be used in the shortcode like this:\n{{\u003c icon \"your-icon\" \u003e}}\r{{\u003c card icon=\"your-icon\" \u003e}}\rTip: Iconify Design is a great place to find SVG icons for your site."},"title":"Icon"},"/docs/guide/shortcodes/steps.fa/":{"data":{"":"","استفاده#استفاده":"یک کامپوننت داخلی برای نمایش یک سری مراحل.\nمثال\rمرحله ۱\rاین اولین مرحله است.\nمرحله ۲\rاین دومین مرحله است.\nمرحله ۳\rاین سومین مرحله است.\nاستفاده\rسرتیتر مارک‌داون h3 را در کد کوتاه steps قرار دهید.\n{{% steps %}}\r### مرحله ۱\rاین اولین مرحله است.\r### مرحله ۲\rاین دومین مرحله است.\r{{% /steps %}}","مثال#مثال":""},"title":"مراحل"},"/docs/guide/shortcodes/steps/":{"data":{"":"","example#Example":"","usage#Usage":"A built-in component to display a series of steps.\nExample\rStep 1\rThis is the first step.\nStep 2\rThis is the second step.\nStep 3\rThis is the third step.\nUsage\rPut Markdown h3 header within steps shortcode.\n{{% steps %}}\r### Step 1\rThis is the first step.\r### Step 2\rThis is the second step.\r{{% /steps %}}"},"title":"Steps"},"/docs/guide/shortcodes/tabs.fa/":{"data":{"":"","استفاده#استفاده":"مثال\rJSONYAMLTOML\rJSON: جیسون معادل اختصاری عبارت JavaScript Object Notation به معنی «نمادگذاری اشیا در جاوا اسکریپت» است. جیسون یک قالب استاندارد باز است که امکان تبادل داده‌ها در وب با استفاده از جفت‌های خصوصیت-کلید را ممکن ساخته است.\rYAML: یک زبان برای سریال‌سازی داده قابل-خواندن-برای-انسان است.\rTOML: یک قالب پرونده پیکربندی که به هدف سادگی در خوانایی به کمک داشتن معانی مشخص با هدف «کمینه» و مینیمال بودن ارائه شده است.\rاستفاده\rپیش‌فرض\r{{\u003c tabs items=\"JSON,YAML,TOML\" \u003e}}\r{{\u003c tab \u003e}}**JSON**: جیسون معادل اختصاری عبارت JavaScript Object Notation به معنی «نمادگذاری اشیا در جاوا اسکریپت» است. جیسون یک قالب استاندارد باز است که امکان تبادل داده‌ها در وب با استفاده از جفت‌های خصوصیت-کلید را ممکن ساخته است.{{\u003c /tab \u003e}}\r{{\u003c tab \u003e}}**YAML**: یک زبان برای سریال‌سازی داده قابل-خواندن-برای-انسان است.{{\u003c /tab \u003e}}\r{{\u003c tab \u003e}}**TOML**: یک قالب پرونده پیکربندی که به هدف سادگی در خوانایی به کمک داشتن معانی مشخص با هدف «کمینه» و مینیمال بودن ارائه شده است.{{\u003c /tab \u003e}}\r{{\u003c /tabs \u003e}}\rمشخص کردن زبانه‌ پیش‌فرض\rاز ویژگی defaultIndex برای مشخص کردن زبانه‌ پیش‌فرض استفاده کنید. این شاخص از 0 شروع می‌شود.\n{{\u003c tabs items=\"JSON,YAML,TOML\" defaultIndex=\"1\" \u003e}}\r{{\u003c tab \u003e}}**JSON**: جیسون معادل اختصاری عبارت JavaScript Object Notation به معنی «نمادگذاری اشیا در جاوا اسکریپت» است. جیسون یک قالب استاندارد باز است که امکان تبادل داده‌ها در وب با استفاده از جفت‌های خصوصیت-کلید را ممکن ساخته است.{{\u003c /tab \u003e}}\r{{\u003c tab \u003e}}**YAML**: یک زبان برای سریال‌سازی داده قابل-خواندن-برای-انسان است.{{\u003c /tab \u003e}}\r{{\u003c tab \u003e}}**TOML**: یک قالب پرونده پیکربندی که به هدف سادگی در خوانایی به کمک داشتن معانی مشخص با هدف «کمینه» و مینیمال بودن ارائه شده است.{{\u003c /tab \u003e}}\r{{\u003c /tabs \u003e}}\rزبانه‌ YAML به طور پیش‌فرض انتخاب می‌شود.\nJSONYAMLTOML\rJSON: جیسون معادل اختصاری عبارت JavaScript Object Notation به معنی «نمادگذاری اشیا در جاوا اسکریپت» است. جیسون یک قالب استاندارد باز است که امکان تبادل داده‌ها در وب با استفاده از جفت‌های خصوصیت-کلید را ممکن ساخته است.\rYAML: یک زبان برای سریال‌سازی داده قابل-خواندن-برای-انسان است.\rTOML: یک قالب پرونده پیکربندی که به هدف سادگی در خوانایی به کمک داشتن معانی مشخص با هدف «کمینه» و مینیمال بودن ارائه شده است.\rاستفاده از مارک‌داون\rسینتکس مارک‌داون از جمله بلوک کد نیز پشتیبانی می‌شود:\n{{\u003c tabs items=\"JSON,YAML,TOML\" \u003e}}\r{{\u003c tab \u003e}}\r```json\r{ \"سلام\": \"دنیا\" }\r```\r{{\u003c /tab \u003e}}\r... زبانه‌های دیگر را به همین ترتیب اضافه کنید\r{{\u003c /tabs \u003e}}\rJSONYAMLTOML\r{ \"سلام\": \"دنیا\" }\rسلام: دنیا\rسلام = \"دنیا\"","مثال#مثال":""},"title":"زبانه‌ها"},"/docs/guide/shortcodes/tabs/":{"data":{"":"","example#Example":"","usage#Usage":"Example\rJSONYAMLTOML\rJSON: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax.\rYAML: YAML is a human-readable data serialization language.\rTOML: TOML aims to be a minimal configuration file format that’s easy to read due to obvious semantics.\rUsage\rDefault\r{{\u003c tabs items=\"JSON,YAML,TOML\" \u003e}}\r{{\u003c tab \u003e}}**JSON**: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax.{{\u003c /tab \u003e}}\r{{\u003c tab \u003e}}**YAML**: YAML is a human-readable data serialization language.{{\u003c /tab \u003e}}\r{{\u003c tab \u003e}}**TOML**: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.{{\u003c /tab \u003e}}\r{{\u003c /tabs \u003e}}\rSpecify Selected Index\rUse defaultIndex property to specify the selected tab. The index starts from 0.\n{{\u003c tabs items=\"JSON,YAML,TOML\" defaultIndex=\"1\" \u003e}}\r{{\u003c tab \u003e}}**JSON**: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax.{{\u003c /tab \u003e}}\r{{\u003c tab \u003e}}**YAML**: YAML is a human-readable data serialization language.{{\u003c /tab \u003e}}\r{{\u003c tab \u003e}}**TOML**: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.{{\u003c /tab \u003e}}\r{{\u003c /tabs \u003e}}\rThe YAML tab will be selected by default.\nJSONYAMLTOML\rJSON: JavaScript Object Notation (JSON) is a standard text-based format for representing structured data based on JavaScript object syntax.\rYAML: YAML is a human-readable data serialization language.\rTOML: TOML aims to be a minimal configuration file format that’s easy to read due to obvious semantics.\rUse Markdown\rMarkdown syntax including code block is also supported:\n{{\u003c tabs items=\"JSON,YAML,TOML\" \u003e}}\r{{\u003c tab \u003e}}\r```json\r{ \"hello\": \"world\" }\r```\r{{\u003c /tab \u003e}}\r... add other tabs similarly\r{{\u003c /tabs \u003e}}\rJSONYAMLTOML\r{ \"hello\": \"world\" }\rhello: world\rhello = \"world\""},"title":"Tabs"},"/docs/guide/syntax-highlighting.fa/":{"data":{"":"","زبانهای-پشتیبانی-شده#زبان‌های پشتیبانی شده":"هیوگو از Chroma، یک برجسته‌کننده سینتکس عمومی در Go خالص، برای برجسته‌سازی کردن سینتکس استفاده می‌کند. توصیه می‌شود از بک‌تیک برای بلوک‌های کد در محتوای مارک‌داون استفاده کنید. مثلا:\nMarkdown```python def say_hello(): print(\"سلام!\") ```\rبه صورت زیر رندر خواهد شد:\ndef say_hello(): print(\"سلام!\")\rویژگی‌ها\rFilename\rبرای افزودن نام پرونده یا عنوان به بلوک کد، filename را مشخص کنید:\nMarkdown```python {filename=\"hello.py\"} def say_hello(): print(\"سلام!\") ```\rhello.pydef say_hello(): print(\"سلام!\")\rشماره خطوط\rبرای تنظیم شماره خطوط، ویژگی linenos را روی table قرار دهید و به صورت اختیاری linenostart را روی شماره‌ای که خط شروع می‌شود تنظیم کنید:\nMarkdown```python {linenos=table,linenostart=42} def say_hello(): print(\"سلام!\") ```\r42 43 def say_hello(): print(\"سلام!\") برجسته کردن خطوط\rبرای برجسته کردن خطوط، ویژگی hl_lines را به فهرستی از شماره خطوط تنظیم کنید:\nMarkdown```python {linenos=table,hl_lines=[2,4],linenostart=1,filename=\"hello.py\"} def say_hello(): print(\"سلام!\") def main(): say_hello() ```\rhello.py 1 2 3 4 5 def say_hello(): print(\"سلام!\") def main(): say_hello() دکمه کپی\rبه طور پیش‌فرض، دکمه کپی برای بلوک‌های کد فعال است.\nزبان‌های پشتیبانی شده\rبرای مشاهده فهرست زبان‌های پشتیبانی شده، لطفا به مستندات Chroma مراجعه کنید.","ویژگیها#ویژگی‌ها":""},"title":"برجسته‌کردن سینتکس"},"/docs/guide/syntax-highlighting/":{"data":{"":"","features#Features":"","supported-languages#Supported Languages":"Hugo uses Chroma, a general purpose syntax highlighter in pure Go, for syntax highlighting. It is recommended to use backticks for code blocks in Markdown content. For example:\nMarkdown```python def say_hello(): print(\"Hello!\") ```\rwill be rendered as:\ndef say_hello(): print(\"Hello!\")\rFeatures\rFilename\rTo add a filename or title to the code block, set attribute filename:\nMarkdown```python {filename=\"hello.py\"} def say_hello(): print(\"Hello!\") ```\rhello.pydef say_hello(): print(\"Hello!\")\rLine Numbers\rTo set line numbers, set attribute linenos to table and optionally set linenostart to the starting line number:\nMarkdown```python {linenos=table,linenostart=42} def say_hello(): print(\"Hello!\") ```\r42 43 def say_hello(): print(\"Hello!\") Highlighting Lines\rTo highlight lines, set attribute hl_lines to a list of line numbers:\nMarkdown```python {linenos=table,hl_lines=[2,4],linenostart=1,filename=\"hello.py\"} def say_hello(): print(\"Hello!\") def main(): say_hello() ```\rhello.py 1 2 3 4 5 def say_hello(): print(\"Hello!\") def main(): say_hello() Copy Button\rBy default, copy button is enabled for code blocks. Its behavior can changed by modifying the site configuration file:\nhugo.yaml 42 43 44 45 46 47 params: highlight: copy: enable: true # hover | always display: hover Supported Languages\rFor a list of supported languages, please see the Chroma documentation."},"title":"Syntax Highlighting"},"/showcase/":{"data":{"":"\rOpen source projects powered by Hextra\rAXIVO Docs\rStanford CS 40\rHelix Docs\rClever Cloud Documentation\rOWASP AI Security and Privacy Guide\rOsuny\rPorter\rHITSZ OpenAuto\rLutheranConfessions\rHextra Starter Template"},"title":"Showcase"}}